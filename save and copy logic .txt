def clean(self):
        total = int(self.total_amount or 0)
        paid = int(self.paid_amount or 0)
        center_disc = int(self.disc_by_center or 0)
        doctor_disc = int(self.disc_by_doctor or 0)

        if total != paid + center_disc + doctor_disc:
            raise ValidationError({
                'paid_amount': f"Total amount ({total}) must be equal to paid ({paid}) + center discount ({center_disc}) + doctor discount ({doctor_disc})."
            })

    def save(self, *args, **kwargs):
        if not self.bill_number:
            now = timezone.now()
            timestamp = now.strftime('%Y%m%d%H%M%S%f')
            self.bill_number = f"LL{timestamp}"

        if self.diagnosis_type:
            self.total_amount = int(self.diagnosis_type.price)

        # Validate fields first â€” this will trigger `clean()`
        self.full_clean()

        # Calculate incentive
        total = int(self.total_amount or 0)
        paid = int(self.paid_amount or 0)
        center_disc = int(self.disc_by_center or 0)
        doctor_disc = int(self.disc_by_doctor or 0)

        doctor_incentive = 0
        if self.referred_by_doctor and self.diagnosis_type:
            doctor = self.referred_by_doctor
            category = self.diagnosis_type.category.lower()

            category_percentage_map = {
                'ultrasound': doctor.ultrasound_percentage,
                'pathology': doctor.pathology_percentage,
                'ecg': doctor.ecg_percentage,
                'xray': doctor.xray_percentage,
                'franchise_lab': doctor.franchise_lab_percentage,
            }

            percent = category_percentage_map.get(category, 0)
            full_incentive = (total * percent) // 100

            if total == paid or (doctor_disc == 0 and center_disc > 0):
                doctor_incentive = full_incentive
            elif doctor_disc > 0:
                doctor_incentive = full_incentive - doctor_disc
            else:
                doctor_incentive = full_incentive

        self.incentive_amount = doctor_incentive

        super().save(*args, **kwargs)
    def __str__(self):
        return f"{self.bill_number} {self.patient_name} {self.patient_age} {self.patient_sex} Ref by Dr. {self.referred_by_doctor.first_name} {self.referred_by_doctor.last_name}"
    
